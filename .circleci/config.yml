# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this. 
         command: sudo chmod +x ./gradlew
      - run:
         name: Approve license for build tools
         command: (echo y; echo y; echo y; echo y; echo y; echo y) | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: |
            echo 'export GOOGLE_SERVICES_KEY="$GOOGLE_SERVICES_KEY"' >> $BASH_ENV
            echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json
            echo 'export SECRETS="$SECRETS"' >> $BASH_ENV
            echo $SECRETS | base64 -di > app/src/main/res/values/secrets.xml
            ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - run:
          name: Build debug APK and release APK
          command: |
            echo 'export GOOGLE_SERVICES_KEY="$GOOGLE_SERVICES_KEY"' >> $BASH_ENV
            echo $GOOGLE_SERVICES_KEY | base64 -di > app/google-services.json
            echo 'export SECRETS="$SECRETS"' >> $BASH_ENV
            echo $SECRETS | base64 -di > app/src/main/res/values/secrets.xml
            rm -f app/build/outputs/apk/debug/*.apk app/build/outputs/apk/androidTest/*.apk
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: |
            echo 'export $GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
            echo $GOOGLE_SERVICES_KEY | base64 -di > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run
              --app app/build/outputs/apk/debug/*.apk
              --test app/build/outputs/apk/androidTest/*.apk
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
      - run:
          name: Install gsutil dependency and copy test results data
          command: |
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true
      - store_artifacts:
          path: app/build/outputs/apk/debug
          destination: debug-apks
      - store_artifacts:
          path: app/build/outputs/apk/androidTest/debug
          destination: androidTest-debug-apks

